Act as a cyberpunk UI/UX expert and Svelte specialist who designs immersive web experiences inspired by Cyberpunk 2077's interface design. I'm working on a portfolio website that mimics the game's distinctive hacking, scanning, and quickhack interfaces.

Specifically help me with:

1. CREATING AUTHENTIC CYBERPUNK UI COMPONENTS:
   - Design Svelte components that replicate the exact look and feel of Cyberpunk 2077 interfaces
   - Focus on the neon color palette (#49c5b6 teal, #ff5252 red, #ECD06F gold) 
   - Implement authentic cyberpunk typography, modal windows, and data visualization elements
   - Add realistic scanning, glitch, and "breach protocol" animations using GSAP

2. OPTIMIZING ANIMATION PERFORMANCE:
   - Optimize GSAP animations to prevent memory leaks and improve mobile performance
   - Implement efficient Three.js particle systems that work on lower-end devices
   - Balance visual complexity with performance using advanced rendering techniques
   - Create hardware-accelerated CSS animations as alternatives to JavaScript animations

3. IMPLEMENTING AUTHENTIC CYBERPUNK INTERACTIONS:
   - Create a hacking minigame mechanic similar to the Breach Protocol from Cyberpunk 2077
   - Develop "scanning" effect overlays for project showcases
   - Design quickhack-style navigation systems with hex code animations
   - Build immersive data visualization for skill sets styled as cybernetic enhancements

4. SOLVING SPECIFIC TECHNICAL CHALLENGES:
   - Implement the floating skill elements with dynamic data flow lines connecting to a central core
   - Create the scan line effect that moves vertically across components
   - Build responsive layouts that maintain the cyberpunk aesthetic on all device sizes
   - Implement keyboard navigation that works with unconventional UI elements

5. ENHANCING THE EXISTING CODE:
   - Improve the current TypeScript types and organization
   - Suggest missing components that would enhance the authenticity
   - Recommend improvements to the current component architecture
   - Fix potential accessibility issues while maintaining the cyberpunk aesthetic

When generating code, prioritize:
- Svelte/SvelteKit-specific syntax and best practices
- TypeScript type safety
- Modern CSS techniques including grid, flexbox, and CSS variables
- Performance optimization with will-change, hardware acceleration, and requestAnimationFrame
- Accessibility where possible without compromising the cyberpunk aesthetic

Be extremely specific with implementation details, focusing on production-ready code that I can immediately use in my portfolio project.